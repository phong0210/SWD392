// <auto-generated />
using System;
using DiamondShopSystem.DAL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DiamondShopSystem.DAL.Migrations
{
    [DbContext(typeof(DiamondShopDbContext))]
    [Migration("20250630225127_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DiamondShopSystem.BLL.Domain.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c9d4a0c1-5b0d-4e44-8c8a-0f8b0f8b0f8b"),
                            Name = "Rings"
                        },
                        new
                        {
                            Id = new Guid("d1e5b1d2-6c1e-4f55-9d9b-1c9c1c9c1c9c"),
                            Name = "Necklaces"
                        });
                });

            modelBuilder.Entity("DiamondShopSystem.BLL.Domain.Entities.CustomerProfile", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<int>("LoyaltyPoints")
                        .HasColumnType("integer");

                    b.Property<Guid?>("VipStatusId")
                        .HasColumnType("uuid");

                    b.HasKey("UserId");

                    b.HasIndex("VipStatusId");

                    b.ToTable("CustomerProfiles");
                });

            modelBuilder.Entity("DiamondShopSystem.BLL.Domain.Entities.Delivery", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DeliveredDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DeliveryStaffId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DispatchedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uuid");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DeliveryStaffId");

                    b.HasIndex("OrderId")
                        .IsUnique();

                    b.ToTable("Deliveries");
                });

            modelBuilder.Entity("DiamondShopSystem.BLL.Domain.Entities.LoyaltyPointTransaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Points")
                        .HasColumnType("integer");

                    b.Property<int>("TransactionType")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("LoyaltyPointTransactions");
                });

            modelBuilder.Entity("DiamondShopSystem.BLL.Domain.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("DiamondShopSystem.BLL.Domain.Entities.OrderDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("PriceAtTimeOfPurchase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("DiamondShopSystem.BLL.Domain.Entities.Payment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uuid");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("DiamondShopSystem.BLL.Domain.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("BasePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("SKU")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a1b2c3d4-e5f6-7890-1234-567890abcdef"),
                            BasePrice = 1500.00m,
                            CategoryId = new Guid("c9d4a0c1-5b0d-4e44-8c8a-0f8b0f8b0f8b"),
                            Description = "A beautiful classic diamond ring.",
                            IsActive = true,
                            Name = "Classic Diamond Ring",
                            SKU = "RING001"
                        },
                        new
                        {
                            Id = new Guid("b2c3d4e5-f6a7-8901-2345-67890abcdef0"),
                            BasePrice = 2500.00m,
                            CategoryId = new Guid("d1e5b1d2-6c1e-4f55-9d9b-1c9c1c9c1c9c"),
                            Description = "A stunning diamond necklace for special occasions.",
                            IsActive = true,
                            Name = "Elegant Diamond Necklace",
                            SKU = "NECK001"
                        });
                });

            modelBuilder.Entity("DiamondShopSystem.BLL.Domain.Entities.Promotion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<decimal>("DiscountPercentage")
                        .HasColumnType("decimal(5,2)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Promotions");
                });

            modelBuilder.Entity("DiamondShopSystem.BLL.Domain.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11"),
                            Name = "Customer"
                        },
                        new
                        {
                            Id = new Guid("a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a12"),
                            Name = "SalesStaff"
                        },
                        new
                        {
                            Id = new Guid("a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a13"),
                            Name = "StoreManager"
                        },
                        new
                        {
                            Id = new Guid("a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a14"),
                            Name = "HeadOfficeAdmin"
                        },
                        new
                        {
                            Id = new Guid("a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a15"),
                            Name = "DeliveryStaff"
                        });
                });

            modelBuilder.Entity("DiamondShopSystem.BLL.Domain.Entities.StaffProfile", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("UserId");

                    b.ToTable("StaffProfiles");
                });

            modelBuilder.Entity("DiamondShopSystem.BLL.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DiamondShopSystem.BLL.Domain.Entities.VipStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("DiscountMultiplier")
                        .HasColumnType("decimal(5,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("RequiredPoints")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("VipStatuses");
                });

            modelBuilder.Entity("DiamondShopSystem.BLL.Domain.Entities.Warranty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Duration")
                        .HasColumnType("integer");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.Property<string>("Terms")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId")
                        .IsUnique();

                    b.ToTable("Warranties");
                });

            modelBuilder.Entity("DiamondShopSystem.BLL.Domain.Entities.CustomerProfile", b =>
                {
                    b.HasOne("DiamondShopSystem.BLL.Domain.Entities.User", "User")
                        .WithOne("CustomerProfile")
                        .HasForeignKey("DiamondShopSystem.BLL.Domain.Entities.CustomerProfile", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiamondShopSystem.BLL.Domain.Entities.VipStatus", "VipStatus")
                        .WithMany("CustomerProfiles")
                        .HasForeignKey("VipStatusId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.OwnsOne("DiamondShopSystem.BLL.Domain.ValueObjects.Address", "Address", b1 =>
                        {
                            b1.Property<Guid>("CustomerProfileUserId")
                                .HasColumnType("uuid");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)");

                            b1.Property<string>("Country")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)");

                            b1.Property<string>("PostalCode")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("character varying(20)");

                            b1.Property<string>("State")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)");

                            b1.Property<string>("Street")
                                .IsRequired()
                                .HasMaxLength(255)
                                .HasColumnType("character varying(255)");

                            b1.HasKey("CustomerProfileUserId");

                            b1.ToTable("CustomerProfiles");

                            b1.WithOwner()
                                .HasForeignKey("CustomerProfileUserId");
                        });

                    b.Navigation("Address")
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("VipStatus");
                });

            modelBuilder.Entity("DiamondShopSystem.BLL.Domain.Entities.Delivery", b =>
                {
                    b.HasOne("DiamondShopSystem.BLL.Domain.Entities.User", "DeliveryStaff")
                        .WithMany()
                        .HasForeignKey("DeliveryStaffId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("DiamondShopSystem.BLL.Domain.Entities.Order", "Order")
                        .WithOne("Delivery")
                        .HasForeignKey("DiamondShopSystem.BLL.Domain.Entities.Delivery", "OrderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("DeliveryStaff");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("DiamondShopSystem.BLL.Domain.Entities.LoyaltyPointTransaction", b =>
                {
                    b.HasOne("DiamondShopSystem.BLL.Domain.Entities.User", "Customer")
                        .WithMany("LoyaltyPointTransactions")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("DiamondShopSystem.BLL.Domain.Entities.Order", b =>
                {
                    b.HasOne("DiamondShopSystem.BLL.Domain.Entities.User", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.OwnsOne("DiamondShopSystem.BLL.Domain.ValueObjects.Address", "ShippingAddress", b1 =>
                        {
                            b1.Property<Guid>("OrderId")
                                .HasColumnType("uuid");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)");

                            b1.Property<string>("Country")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)");

                            b1.Property<string>("PostalCode")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("character varying(20)");

                            b1.Property<string>("State")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)");

                            b1.Property<string>("Street")
                                .IsRequired()
                                .HasMaxLength(255)
                                .HasColumnType("character varying(255)");

                            b1.HasKey("OrderId");

                            b1.ToTable("Orders");

                            b1.WithOwner()
                                .HasForeignKey("OrderId");
                        });

                    b.Navigation("Customer");

                    b.Navigation("ShippingAddress")
                        .IsRequired();
                });

            modelBuilder.Entity("DiamondShopSystem.BLL.Domain.Entities.OrderDetail", b =>
                {
                    b.HasOne("DiamondShopSystem.BLL.Domain.Entities.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiamondShopSystem.BLL.Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DiamondShopSystem.BLL.Domain.Entities.Payment", b =>
                {
                    b.HasOne("DiamondShopSystem.BLL.Domain.Entities.Order", "Order")
                        .WithMany("Payments")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("DiamondShopSystem.BLL.Domain.Entities.Product", b =>
                {
                    b.HasOne("DiamondShopSystem.BLL.Domain.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.OwnsOne("DiamondShopSystem.BLL.Domain.ValueObjects.DiamondProperties", "DiamondProperties", b1 =>
                        {
                            b1.Property<Guid>("ProductId")
                                .HasColumnType("uuid");

                            b1.Property<decimal>("Carat")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<string>("Clarity")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("character varying(50)");

                            b1.Property<string>("Color")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("character varying(50)");

                            b1.Property<string>("Cut")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("character varying(50)");

                            b1.HasKey("ProductId");

                            b1.ToTable("Products");

                            b1.WithOwner()
                                .HasForeignKey("ProductId");

                            b1.HasData(
                                new
                                {
                                    ProductId = new Guid("a1b2c3d4-e5f6-7890-1234-567890abcdef"),
                                    Carat = 1.0m,
                                    Clarity = "VS1",
                                    Color = "D",
                                    Cut = "Excellent"
                                },
                                new
                                {
                                    ProductId = new Guid("b2c3d4e5-f6a7-8901-2345-67890abcdef0"),
                                    Carat = 1.5m,
                                    Clarity = "VVS2",
                                    Color = "E",
                                    Cut = "Very Good"
                                });
                        });

                    b.Navigation("Category");

                    b.Navigation("DiamondProperties")
                        .IsRequired();
                });

            modelBuilder.Entity("DiamondShopSystem.BLL.Domain.Entities.Promotion", b =>
                {
                    b.HasOne("DiamondShopSystem.BLL.Domain.Entities.Product", "Product")
                        .WithMany("Promotions")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DiamondShopSystem.BLL.Domain.Entities.StaffProfile", b =>
                {
                    b.HasOne("DiamondShopSystem.BLL.Domain.Entities.User", "User")
                        .WithOne("StaffProfile")
                        .HasForeignKey("DiamondShopSystem.BLL.Domain.Entities.StaffProfile", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DiamondShopSystem.BLL.Domain.Entities.User", b =>
                {
                    b.HasOne("DiamondShopSystem.BLL.Domain.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("DiamondShopSystem.BLL.Domain.Entities.Warranty", b =>
                {
                    b.HasOne("DiamondShopSystem.BLL.Domain.Entities.Product", "Product")
                        .WithOne("Warranty")
                        .HasForeignKey("DiamondShopSystem.BLL.Domain.Entities.Warranty", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DiamondShopSystem.BLL.Domain.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("DiamondShopSystem.BLL.Domain.Entities.Order", b =>
                {
                    b.Navigation("Delivery")
                        .IsRequired();

                    b.Navigation("OrderDetails");

                    b.Navigation("Payments");
                });

            modelBuilder.Entity("DiamondShopSystem.BLL.Domain.Entities.Product", b =>
                {
                    b.Navigation("Promotions");

                    b.Navigation("Warranty")
                        .IsRequired();
                });

            modelBuilder.Entity("DiamondShopSystem.BLL.Domain.Entities.User", b =>
                {
                    b.Navigation("CustomerProfile")
                        .IsRequired();

                    b.Navigation("LoyaltyPointTransactions");

                    b.Navigation("Orders");

                    b.Navigation("StaffProfile")
                        .IsRequired();
                });

            modelBuilder.Entity("DiamondShopSystem.BLL.Domain.Entities.VipStatus", b =>
                {
                    b.Navigation("CustomerProfiles");
                });
#pragma warning restore 612, 618
        }
    }
}
