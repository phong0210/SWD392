version: '3.9'

services:
  diamondshopsystem.api:
    image: ${DOCKER_REGISTRY-}diamondshopsystemapi
    build:
      context: .
      dockerfile: DiamondShopSystem.API/Dockerfile
    env_file:
      - .env
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: ${DB_NAME}
      DB_USER: postgres                  
      DB_PASSWORD: ${DB_PASSWORD}
      SUPABASECONNECT_USER_ID: ${SUPABASECONNECT_USER_ID}
      SUPABASECONNECT_PASSWORD: ${SUPABASECONNECT_PASSWORD}
      SUPABASECONNECT_SERVER: ${SUPABASECONNECT_SERVER}
      SUPABASECONNECT_PORT: ${SUPABASECONNECT_PORT}
      SUPABASECONNECT_DATABASE: ${SUPABASECONNECT_DATABASE}
      JWT_AUDIENCE: ${JWT_AUDIENCE}
      JWT_ISSUER: ${JWT_ISSUER}
      JWT_KEY: ${JWT_KEY}
      JWT_REFRESH_TOKEN_VALIDITY_IN_DAYS: ${JWT_REFRESH_TOKEN_VALIDITY_IN_DAYS}
      JWT_TOKEN_VALIDITY_IN_MINUTES: ${JWT_TOKEN_VALIDITY_IN_MINUTES}
    ports:
      - "8081:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network

  postgres:
    image: postgres:17
    restart: always
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    command: >
      postgres -c listen_addresses='*'
               -c log_statement=all
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s
    networks:
      - app-network

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - app-network

  ef: 
    image: mcr.microsoft.com/dotnet/sdk:8.0
    container_name: ef-tools
    working_dir: /app
    volumes:
      - .:/app
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: ${DB_NAME}
      DB_USER: postgres
      DB_PASSWORD: ${DB_PASSWORD}
    depends_on:
      postgres:
        condition: service_healthy
    entrypoint: /bin/bash
    networks:
      - app-network

volumes:
  postgres_data:
  pgadmin_data:

networks:
  app-network:
    driver: bridge
